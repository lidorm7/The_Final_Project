|Test_BS
resetn => Simple_BS:simplebs.resetn
resetn => BS_Filter:bsfilter.resetn
resetn => Card_A_Design:card_a.resetn
sysclk => Simple_BS:simplebs.sysclk
sysclk => BS_Filter:bsfilter.sysclk
sysclk => Card_A_Design:card_a.sysclk
clk90 << Simple_BS:simplebs.clk90
enable << Simple_BS:simplebs.enable
main_clk << Simple_BS:simplebs.main_clk
nrzl_data << Simple_BS:simplebs.nrzl_data


|Test_BS|Simple_BS:simplebs
resetn => sig_enable.ACLR
resetn => cnt_clk[0].ACLR
resetn => cnt_clk[1].ACLR
resetn => cnt_clk[2].ACLR
resetn => cnt_clk[3].ACLR
resetn => cnt_clk[4].ACLR
resetn => cnt_clk[5].ACLR
resetn => cnt_clk[6].ACLR
resetn => cnt_clk[7].ACLR
resetn => cnt_clk[8].ACLR
resetn => cnt_clk[9].ACLR
resetn => cnt_clk[10].ACLR
resetn => cnt_clk[11].ACLR
resetn => cnt_clk[12].ACLR
resetn => cnt_clk[13].ACLR
resetn => sig_90_clk.ACLR
resetn => sig_00_clk.PRESET
resetn => nrzl_data~reg0.ACLR
resetn => sig_bi_phase_filterd_cut_not.PRESET
resetn => sig_bi_phase_filterd_cut.ACLR
resetn => sig_00_cut_not.PRESET
resetn => sig_00_cut.ACLR
resetn => sig_90_cut_not.PRESET
resetn => sig_90_cut.ACLR
resetn => sig_ff_B.ACLR
resetn => sig_ff_A.ACLR
sysclk => nrzl_data~reg0.CLK
sysclk => sig_ff_B.CLK
sysclk => sig_ff_A.CLK
sysclk => sig_90_cut_not.CLK
sysclk => sig_90_cut.CLK
sysclk => sig_90_clk.CLK
sysclk => sig_00_cut_not.CLK
sysclk => sig_00_cut.CLK
sysclk => sig_00_clk.CLK
sysclk => sig_enable.CLK
sysclk => cnt_clk[0].CLK
sysclk => cnt_clk[1].CLK
sysclk => cnt_clk[2].CLK
sysclk => cnt_clk[3].CLK
sysclk => cnt_clk[4].CLK
sysclk => cnt_clk[5].CLK
sysclk => cnt_clk[6].CLK
sysclk => cnt_clk[7].CLK
sysclk => cnt_clk[8].CLK
sysclk => cnt_clk[9].CLK
sysclk => cnt_clk[10].CLK
sysclk => cnt_clk[11].CLK
sysclk => cnt_clk[12].CLK
sysclk => cnt_clk[13].CLK
sysclk => sig_bi_phase_filterd_cut_not.CLK
sysclk => sig_bi_phase_filterd_cut.CLK
bi_phase_filtered => sig_bi_phase_filterd_cut.DATAIN
bi_phase_filtered => sig_ff_A.DATAIN
bi_phase_filtered => sig_ff_B.DATAIN
clk90 <= sig_90_clk.DB_MAX_OUTPUT_PORT_TYPE
enable <= sig_enable.DB_MAX_OUTPUT_PORT_TYPE
main_clk <= sig_00_clk.DB_MAX_OUTPUT_PORT_TYPE
nrzl_data <= nrzl_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Test_BS|BS_Filter:bsfilter
resetn => sig_filter[0].ACLR
resetn => sig_filter[1].ACLR
resetn => sig_filter[2].ACLR
resetn => sig_filter[3].ACLR
resetn => sig_filter[4].ACLR
resetn => sig_filter[5].ACLR
resetn => sig_filter[6].ACLR
resetn => sig_filter[7].ACLR
resetn => signal_out~reg0.ACLR
resetn => sig_check_6.PRESET
resetn => sig_check_5.PRESET
resetn => sig_check_4.PRESET
resetn => sig_check_3.PRESET
resetn => sig_check_2.PRESET
resetn => sig_check_1.PRESET
resetn => sig_check_0.PRESET
resetn => sig_total_check.PRESET
sysclk => signal_out~reg0.CLK
sysclk => sig_total_check.CLK
sysclk => sig_check_6.CLK
sysclk => sig_check_5.CLK
sysclk => sig_check_4.CLK
sysclk => sig_check_3.CLK
sysclk => sig_check_2.CLK
sysclk => sig_check_1.CLK
sysclk => sig_check_0.CLK
sysclk => sig_filter[0].CLK
sysclk => sig_filter[1].CLK
sysclk => sig_filter[2].CLK
sysclk => sig_filter[3].CLK
sysclk => sig_filter[4].CLK
sysclk => sig_filter[5].CLK
sysclk => sig_filter[6].CLK
sysclk => sig_filter[7].CLK
bi_pahse_out => sig_filter[0].DATAIN
bi_pahse_out => signal_out~reg0.DATAIN
signal_out <= signal_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Test_BS|Card_A_Design:card_a
resetn => BiPhase_tx:biphase.resetn
resetn => Uart_tx_Rom:tx.resetn
resetn => Uart_rx:rx.resetn
sysclk => BiPhase_tx:biphase.sysclk
sysclk => Uart_tx_Rom:tx.sysclk
sysclk => Uart_rx:rx.sysclk
sysclk => Ram2_X:memory.clock
BiPhase_tx_out <= BiPhase_tx:biphase.BiPhase_tx_out


|Test_BS|Card_A_Design:card_a|BiPhase_tx:biphase
resetn => sig_toggle.ACLR
resetn => sig_read_address_cnt[0].ACLR
resetn => sig_read_address_cnt[1].ACLR
resetn => sig_read_address_cnt[2].ACLR
resetn => sig_read_address_cnt[3].ACLR
resetn => sig_read_address_cnt[4].ACLR
resetn => sig_BiPhase_tx_out.ACLR
resetn => sig_main[0].ACLR
resetn => sig_main[1].ACLR
resetn => sig_main[2].ACLR
resetn => sig_main[3].ACLR
resetn => sig_main[4].ACLR
resetn => sig_main[5].ACLR
resetn => sig_main[6].ACLR
resetn => sig_main[7].ACLR
resetn => sig_main[8].ACLR
resetn => sig_main[9].ACLR
resetn => sig_main[10].ACLR
resetn => sig_main[11].ACLR
resetn => sig_main[12].ACLR
resetn => sig_main[13].ACLR
resetn => sig_cut_not.PRESET
resetn => sig_cut.ACLR
resetn => sig_read.ACLR
resetn => sig_cut_rd_not.PRESET
resetn => sig_cut_rd.ACLR
resetn => sig_shift_data[0].ACLR
resetn => sig_shift_data[1].ACLR
resetn => sig_shift_data[2].ACLR
resetn => sig_shift_data[3].ACLR
resetn => sig_shift_data[4].ACLR
resetn => sig_shift_data[5].ACLR
resetn => sig_shift_data[6].ACLR
resetn => sig_shift_data[7].ACLR
resetn => state_mini~9.DATAIN
resetn => state_bi~3.DATAIN
resetn => sig_read_address[0].ENA
resetn => sig_inc.ENA
resetn => start_strobe_tx~reg0.ENA
resetn => sig_read_address[5].ENA
resetn => sig_read_address[4].ENA
resetn => sig_read_address[3].ENA
resetn => sig_read_address[2].ENA
resetn => sig_read_address[1].ENA
sysclk => sig_cut_rd_not.CLK
sysclk => sig_cut_rd.CLK
sysclk => sig_BiPhase_tx_out.CLK
sysclk => sig_shift_data[0].CLK
sysclk => sig_shift_data[1].CLK
sysclk => sig_shift_data[2].CLK
sysclk => sig_shift_data[3].CLK
sysclk => sig_shift_data[4].CLK
sysclk => sig_shift_data[5].CLK
sysclk => sig_shift_data[6].CLK
sysclk => sig_shift_data[7].CLK
sysclk => sig_read_address[0].CLK
sysclk => sig_read_address[1].CLK
sysclk => sig_read_address[2].CLK
sysclk => sig_read_address[3].CLK
sysclk => sig_read_address[4].CLK
sysclk => sig_read_address[5].CLK
sysclk => start_strobe_tx~reg0.CLK
sysclk => sig_toggle.CLK
sysclk => sig_read_address_cnt[0].CLK
sysclk => sig_read_address_cnt[1].CLK
sysclk => sig_read_address_cnt[2].CLK
sysclk => sig_read_address_cnt[3].CLK
sysclk => sig_read_address_cnt[4].CLK
sysclk => sig_inc.CLK
sysclk => sig_read.CLK
sysclk => sig_cut_not.CLK
sysclk => sig_cut.CLK
sysclk => sig_main[0].CLK
sysclk => sig_main[1].CLK
sysclk => sig_main[2].CLK
sysclk => sig_main[3].CLK
sysclk => sig_main[4].CLK
sysclk => sig_main[5].CLK
sysclk => sig_main[6].CLK
sysclk => sig_main[7].CLK
sysclk => sig_main[8].CLK
sysclk => sig_main[9].CLK
sysclk => sig_main[10].CLK
sysclk => sig_main[11].CLK
sysclk => sig_main[12].CLK
sysclk => sig_main[13].CLK
sysclk => state_mini~7.DATAIN
sysclk => state_bi~1.DATAIN
q_data_ram[0] => sig_shift_data.DATAB
q_data_ram[1] => sig_shift_data.DATAB
q_data_ram[2] => sig_shift_data.DATAB
q_data_ram[3] => sig_shift_data.DATAB
q_data_ram[4] => sig_shift_data.DATAB
q_data_ram[5] => sig_shift_data.DATAB
q_data_ram[6] => sig_shift_data.DATAB
q_data_ram[7] => sig_shift_data.DATAB
BiPhase_tx_out <= sig_BiPhase_tx_out.DB_MAX_OUTPUT_PORT_TYPE
start_strobe_tx <= start_strobe_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_address[0] <= sig_read_address[0].DB_MAX_OUTPUT_PORT_TYPE
read_address[1] <= sig_read_address[1].DB_MAX_OUTPUT_PORT_TYPE
read_address[2] <= sig_read_address[2].DB_MAX_OUTPUT_PORT_TYPE
read_address[3] <= sig_read_address[3].DB_MAX_OUTPUT_PORT_TYPE
read_address[4] <= sig_read_address[4].DB_MAX_OUTPUT_PORT_TYPE
read_address[5] <= sig_read_address[5].DB_MAX_OUTPUT_PORT_TYPE
rd <= sig_rd_rising_edge.DB_MAX_OUTPUT_PORT_TYPE
toggle <= sig_toggle.DB_MAX_OUTPUT_PORT_TYPE


|Test_BS|Card_A_Design:card_a|Uart_tx_Rom:tx
resetn => sig_bit.PRESET
resetn => sig_address[0].ACLR
resetn => sig_address[1].ACLR
resetn => sig_address[2].ACLR
resetn => sig_address[3].ACLR
resetn => sig_address[4].ACLR
resetn => \transmission:sig_cntr[0].ACLR
resetn => \transmission:sig_cntr[1].ACLR
resetn => \transmission:sig_cntr[2].ACLR
resetn => \transmission:sig_cntr[3].ACLR
resetn => sig_baud_clk.ACLR
resetn => \baud_clock:cnt_baud[0].ACLR
resetn => \baud_clock:cnt_baud[1].ACLR
resetn => \baud_clock:cnt_baud[2].ACLR
resetn => \baud_clock:cnt_baud[3].ACLR
resetn => \baud_clock:cnt_baud[4].ACLR
resetn => \baud_clock:cnt_baud[5].ACLR
resetn => \baud_clock:cnt_baud[6].ACLR
resetn => \baud_clock:cnt_baud[7].ACLR
resetn => \baud_clock:cnt_baud[8].ACLR
resetn => \baud_clock:cnt_baud[9].ACLR
resetn => signal_A_q_not.PRESET
resetn => signal_A_q.ACLR
resetn => state_tx~14.DATAIN
resetn => sig_packet[0].ENA
resetn => sig_byte[7].ENA
resetn => sig_byte[6].ENA
resetn => sig_byte[5].ENA
resetn => sig_byte[4].ENA
resetn => sig_byte[3].ENA
resetn => sig_byte[2].ENA
resetn => sig_byte[1].ENA
resetn => sig_byte[0].ENA
resetn => sig_packet[11].ENA
resetn => sig_packet[10].ENA
resetn => sig_packet[9].ENA
resetn => sig_packet[8].ENA
resetn => sig_packet[7].ENA
resetn => sig_packet[6].ENA
resetn => sig_packet[5].ENA
resetn => sig_packet[4].ENA
resetn => sig_packet[3].ENA
resetn => sig_packet[2].ENA
resetn => sig_packet[1].ENA
sysclk => Rom_X:dut.clock
sysclk => sig_packet[0].CLK
sysclk => sig_packet[1].CLK
sysclk => sig_packet[2].CLK
sysclk => sig_packet[3].CLK
sysclk => sig_packet[4].CLK
sysclk => sig_packet[5].CLK
sysclk => sig_packet[6].CLK
sysclk => sig_packet[7].CLK
sysclk => sig_packet[8].CLK
sysclk => sig_packet[9].CLK
sysclk => sig_packet[10].CLK
sysclk => sig_packet[11].CLK
sysclk => sig_byte[0].CLK
sysclk => sig_byte[1].CLK
sysclk => sig_byte[2].CLK
sysclk => sig_byte[3].CLK
sysclk => sig_byte[4].CLK
sysclk => sig_byte[5].CLK
sysclk => sig_byte[6].CLK
sysclk => sig_byte[7].CLK
sysclk => sig_bit.CLK
sysclk => sig_address[0].CLK
sysclk => sig_address[1].CLK
sysclk => sig_address[2].CLK
sysclk => sig_address[3].CLK
sysclk => sig_address[4].CLK
sysclk => \transmission:sig_cntr[0].CLK
sysclk => \transmission:sig_cntr[1].CLK
sysclk => \transmission:sig_cntr[2].CLK
sysclk => \transmission:sig_cntr[3].CLK
sysclk => signal_A_q_not.CLK
sysclk => signal_A_q.CLK
sysclk => sig_baud_clk.CLK
sysclk => \baud_clock:cnt_baud[0].CLK
sysclk => \baud_clock:cnt_baud[1].CLK
sysclk => \baud_clock:cnt_baud[2].CLK
sysclk => \baud_clock:cnt_baud[3].CLK
sysclk => \baud_clock:cnt_baud[4].CLK
sysclk => \baud_clock:cnt_baud[5].CLK
sysclk => \baud_clock:cnt_baud[6].CLK
sysclk => \baud_clock:cnt_baud[7].CLK
sysclk => \baud_clock:cnt_baud[8].CLK
sysclk => \baud_clock:cnt_baud[9].CLK
sysclk => state_tx~12.DATAIN
start_triger => Selector1.IN4
start_triger => Selector0.IN1
start_triger => Selector2.IN1
uart_tx_triger <= sig_bit.DB_MAX_OUTPUT_PORT_TYPE


|Test_BS|Card_A_Design:card_a|Uart_tx_Rom:tx|Rom_X:dut
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|Test_BS|Card_A_Design:card_a|Uart_tx_Rom:tx|Rom_X:dut|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_pt81:auto_generated.address_a[0]
address_a[1] => altsyncram_pt81:auto_generated.address_a[1]
address_a[2] => altsyncram_pt81:auto_generated.address_a[2]
address_a[3] => altsyncram_pt81:auto_generated.address_a[3]
address_a[4] => altsyncram_pt81:auto_generated.address_a[4]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_pt81:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_pt81:auto_generated.q_a[0]
q_a[1] <= altsyncram_pt81:auto_generated.q_a[1]
q_a[2] <= altsyncram_pt81:auto_generated.q_a[2]
q_a[3] <= altsyncram_pt81:auto_generated.q_a[3]
q_a[4] <= altsyncram_pt81:auto_generated.q_a[4]
q_a[5] <= altsyncram_pt81:auto_generated.q_a[5]
q_a[6] <= altsyncram_pt81:auto_generated.q_a[6]
q_a[7] <= altsyncram_pt81:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|Test_BS|Card_A_Design:card_a|Uart_tx_Rom:tx|Rom_X:dut|altsyncram:altsyncram_component|altsyncram_pt81:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|Test_BS|Card_A_Design:card_a|Uart_rx:rx
resetn => \main_rx:var_clk_cntr[0].ACLR
resetn => \main_rx:var_clk_cntr[1].ACLR
resetn => \main_rx:var_clk_cntr[2].ACLR
resetn => \main_rx:var_clk_cntr[3].ACLR
resetn => \main_rx:var_clk_cntr[4].ACLR
resetn => \main_rx:var_clk_cntr[5].ACLR
resetn => \main_rx:var_bit_cntr[0].ACLR
resetn => \main_rx:var_bit_cntr[1].ACLR
resetn => \main_rx:var_bit_cntr[2].ACLR
resetn => \main_rx:var_bit_cntr[3].ACLR
resetn => \main_rx:var_trns_cntr[0].ACLR
resetn => \main_rx:var_trns_cntr[1].ACLR
resetn => \main_rx:var_trns_cntr[2].ACLR
resetn => \main_rx:var_trns_cntr[3].ACLR
resetn => \main_rx:var_trns_cntr[4].ACLR
resetn => \main_rx:var_trns_cntr[5].ACLR
resetn => \main_rx:var_trns_cntr[6].ACLR
resetn => \main_rx:var_trns_cntr[7].ACLR
resetn => \main_rx:var_trns_cntr[8].ACLR
resetn => \main_rx:var_trns_cntr[9].ACLR
resetn => \main_rx:var_trns_cntr[10].ACLR
resetn => \main_rx:var_trns_cntr[11].ACLR
resetn => \main_rx:var_trns_cntr[12].ACLR
resetn => \main_rx:var_trns_cntr[13].ACLR
resetn => \main_rx:var_trns_cntr[14].ACLR
resetn => \main_rx:var_trns_cntr[15].ACLR
resetn => \main_rx:var_trns_cntr[16].ACLR
resetn => \main_rx:var_trns_cntr[17].ACLR
resetn => \main_rx:var_trns_cntr[18].ACLR
resetn => sig_baudx32.ACLR
resetn => signal_A_q_not.PRESET
resetn => signal_A_q.ACLR
resetn => sig_bouncer_bit.ACLR
resetn => sig_bit[0].ACLR
resetn => sig_bit[1].ACLR
resetn => sig_bit[2].ACLR
resetn => state_rx~9.DATAIN
resetn => \baud_rate_clk:var_cntr[6].ENA
resetn => \baud_rate_clk:var_cntr[5].ENA
resetn => \baud_rate_clk:var_cntr[4].ENA
resetn => \baud_rate_clk:var_cntr[3].ENA
resetn => \baud_rate_clk:var_cntr[2].ENA
resetn => \baud_rate_clk:var_cntr[1].ENA
resetn => \baud_rate_clk:var_cntr[0].ENA
resetn => sig_cnt_address[0].ENA
resetn => sig_wr_ram.ENA
resetn => sig_ram_address[5].ENA
resetn => sig_ram_address[4].ENA
resetn => sig_ram_address[3].ENA
resetn => sig_ram_address[2].ENA
resetn => sig_ram_address[1].ENA
resetn => sig_ram_address[0].ENA
resetn => sig_data_bit.ENA
resetn => sig_detected_byte[7].ENA
resetn => sig_detected_byte[6].ENA
resetn => sig_detected_byte[5].ENA
resetn => sig_detected_byte[4].ENA
resetn => sig_detected_byte[3].ENA
resetn => sig_detected_byte[2].ENA
resetn => sig_detected_byte[1].ENA
resetn => sig_detected_byte[0].ENA
resetn => detected_byte[7]~reg0.ENA
resetn => detected_byte[6]~reg0.ENA
resetn => detected_byte[5]~reg0.ENA
resetn => detected_byte[4]~reg0.ENA
resetn => detected_byte[3]~reg0.ENA
resetn => detected_byte[2]~reg0.ENA
resetn => detected_byte[1]~reg0.ENA
resetn => detected_byte[0]~reg0.ENA
resetn => sig_cnt_address[4].ENA
resetn => sig_cnt_address[3].ENA
resetn => sig_cnt_address[2].ENA
resetn => sig_cnt_address[1].ENA
sysclk => sig_cnt_address[0].CLK
sysclk => sig_cnt_address[1].CLK
sysclk => sig_cnt_address[2].CLK
sysclk => sig_cnt_address[3].CLK
sysclk => sig_cnt_address[4].CLK
sysclk => detected_byte[0]~reg0.CLK
sysclk => detected_byte[1]~reg0.CLK
sysclk => detected_byte[2]~reg0.CLK
sysclk => detected_byte[3]~reg0.CLK
sysclk => detected_byte[4]~reg0.CLK
sysclk => detected_byte[5]~reg0.CLK
sysclk => detected_byte[6]~reg0.CLK
sysclk => detected_byte[7]~reg0.CLK
sysclk => sig_detected_byte[0].CLK
sysclk => sig_detected_byte[1].CLK
sysclk => sig_detected_byte[2].CLK
sysclk => sig_detected_byte[3].CLK
sysclk => sig_detected_byte[4].CLK
sysclk => sig_detected_byte[5].CLK
sysclk => sig_detected_byte[6].CLK
sysclk => sig_detected_byte[7].CLK
sysclk => sig_data_bit.CLK
sysclk => sig_ram_address[0].CLK
sysclk => sig_ram_address[1].CLK
sysclk => sig_ram_address[2].CLK
sysclk => sig_ram_address[3].CLK
sysclk => sig_ram_address[4].CLK
sysclk => sig_ram_address[5].CLK
sysclk => sig_wr_ram.CLK
sysclk => \main_rx:var_clk_cntr[0].CLK
sysclk => \main_rx:var_clk_cntr[1].CLK
sysclk => \main_rx:var_clk_cntr[2].CLK
sysclk => \main_rx:var_clk_cntr[3].CLK
sysclk => \main_rx:var_clk_cntr[4].CLK
sysclk => \main_rx:var_clk_cntr[5].CLK
sysclk => \main_rx:var_bit_cntr[0].CLK
sysclk => \main_rx:var_bit_cntr[1].CLK
sysclk => \main_rx:var_bit_cntr[2].CLK
sysclk => \main_rx:var_bit_cntr[3].CLK
sysclk => \main_rx:var_trns_cntr[0].CLK
sysclk => \main_rx:var_trns_cntr[1].CLK
sysclk => \main_rx:var_trns_cntr[2].CLK
sysclk => \main_rx:var_trns_cntr[3].CLK
sysclk => \main_rx:var_trns_cntr[4].CLK
sysclk => \main_rx:var_trns_cntr[5].CLK
sysclk => \main_rx:var_trns_cntr[6].CLK
sysclk => \main_rx:var_trns_cntr[7].CLK
sysclk => \main_rx:var_trns_cntr[8].CLK
sysclk => \main_rx:var_trns_cntr[9].CLK
sysclk => \main_rx:var_trns_cntr[10].CLK
sysclk => \main_rx:var_trns_cntr[11].CLK
sysclk => \main_rx:var_trns_cntr[12].CLK
sysclk => \main_rx:var_trns_cntr[13].CLK
sysclk => \main_rx:var_trns_cntr[14].CLK
sysclk => \main_rx:var_trns_cntr[15].CLK
sysclk => \main_rx:var_trns_cntr[16].CLK
sysclk => \main_rx:var_trns_cntr[17].CLK
sysclk => \main_rx:var_trns_cntr[18].CLK
sysclk => sig_bouncer_bit.CLK
sysclk => sig_bit[0].CLK
sysclk => sig_bit[1].CLK
sysclk => sig_bit[2].CLK
sysclk => signal_A_q_not.CLK
sysclk => signal_A_q.CLK
sysclk => sig_baudx32.CLK
sysclk => \baud_rate_clk:var_cntr[0].CLK
sysclk => \baud_rate_clk:var_cntr[1].CLK
sysclk => \baud_rate_clk:var_cntr[2].CLK
sysclk => \baud_rate_clk:var_cntr[3].CLK
sysclk => \baud_rate_clk:var_cntr[4].CLK
sysclk => \baud_rate_clk:var_cntr[5].CLK
sysclk => \baud_rate_clk:var_cntr[6].CLK
sysclk => state_rx~7.DATAIN
toggle => sig_ram_address.DATAB
detected_bit => sig_bit[0].DATAIN
wr_ram <= sig_wr_ram.DB_MAX_OUTPUT_PORT_TYPE
ram_address[0] <= sig_ram_address[0].DB_MAX_OUTPUT_PORT_TYPE
ram_address[1] <= sig_ram_address[1].DB_MAX_OUTPUT_PORT_TYPE
ram_address[2] <= sig_ram_address[2].DB_MAX_OUTPUT_PORT_TYPE
ram_address[3] <= sig_ram_address[3].DB_MAX_OUTPUT_PORT_TYPE
ram_address[4] <= sig_ram_address[4].DB_MAX_OUTPUT_PORT_TYPE
ram_address[5] <= sig_ram_address[5].DB_MAX_OUTPUT_PORT_TYPE
detected_byte[0] <= detected_byte[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[1] <= detected_byte[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[2] <= detected_byte[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[3] <= detected_byte[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[4] <= detected_byte[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[5] <= detected_byte[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[6] <= detected_byte[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
detected_byte[7] <= detected_byte[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Test_BS|Card_A_Design:card_a|Ram2_X:memory
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
rdaddress[0] => rdaddress[0].IN1
rdaddress[1] => rdaddress[1].IN1
rdaddress[2] => rdaddress[2].IN1
rdaddress[3] => rdaddress[3].IN1
rdaddress[4] => rdaddress[4].IN1
rdaddress[5] => rdaddress[5].IN1
rden => rden.IN1
wraddress[0] => wraddress[0].IN1
wraddress[1] => wraddress[1].IN1
wraddress[2] => wraddress[2].IN1
wraddress[3] => wraddress[3].IN1
wraddress[4] => wraddress[4].IN1
wraddress[5] => wraddress[5].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_b
q[1] <= altsyncram:altsyncram_component.q_b
q[2] <= altsyncram:altsyncram_component.q_b
q[3] <= altsyncram:altsyncram_component.q_b
q[4] <= altsyncram:altsyncram_component.q_b
q[5] <= altsyncram:altsyncram_component.q_b
q[6] <= altsyncram:altsyncram_component.q_b
q[7] <= altsyncram:altsyncram_component.q_b


|Test_BS|Card_A_Design:card_a|Ram2_X:memory|altsyncram:altsyncram_component
wren_a => altsyncram_64s1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => altsyncram_64s1:auto_generated.rden_b
data_a[0] => altsyncram_64s1:auto_generated.data_a[0]
data_a[1] => altsyncram_64s1:auto_generated.data_a[1]
data_a[2] => altsyncram_64s1:auto_generated.data_a[2]
data_a[3] => altsyncram_64s1:auto_generated.data_a[3]
data_a[4] => altsyncram_64s1:auto_generated.data_a[4]
data_a[5] => altsyncram_64s1:auto_generated.data_a[5]
data_a[6] => altsyncram_64s1:auto_generated.data_a[6]
data_a[7] => altsyncram_64s1:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
data_b[4] => ~NO_FANOUT~
data_b[5] => ~NO_FANOUT~
data_b[6] => ~NO_FANOUT~
data_b[7] => ~NO_FANOUT~
address_a[0] => altsyncram_64s1:auto_generated.address_a[0]
address_a[1] => altsyncram_64s1:auto_generated.address_a[1]
address_a[2] => altsyncram_64s1:auto_generated.address_a[2]
address_a[3] => altsyncram_64s1:auto_generated.address_a[3]
address_a[4] => altsyncram_64s1:auto_generated.address_a[4]
address_a[5] => altsyncram_64s1:auto_generated.address_a[5]
address_b[0] => altsyncram_64s1:auto_generated.address_b[0]
address_b[1] => altsyncram_64s1:auto_generated.address_b[1]
address_b[2] => altsyncram_64s1:auto_generated.address_b[2]
address_b[3] => altsyncram_64s1:auto_generated.address_b[3]
address_b[4] => altsyncram_64s1:auto_generated.address_b[4]
address_b[5] => altsyncram_64s1:auto_generated.address_b[5]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_64s1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_a[3] <= <GND>
q_a[4] <= <GND>
q_a[5] <= <GND>
q_a[6] <= <GND>
q_a[7] <= <GND>
q_b[0] <= altsyncram_64s1:auto_generated.q_b[0]
q_b[1] <= altsyncram_64s1:auto_generated.q_b[1]
q_b[2] <= altsyncram_64s1:auto_generated.q_b[2]
q_b[3] <= altsyncram_64s1:auto_generated.q_b[3]
q_b[4] <= altsyncram_64s1:auto_generated.q_b[4]
q_b[5] <= altsyncram_64s1:auto_generated.q_b[5]
q_b[6] <= altsyncram_64s1:auto_generated.q_b[6]
q_b[7] <= altsyncram_64s1:auto_generated.q_b[7]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|Test_BS|Card_A_Design:card_a|Ram2_X:memory|altsyncram:altsyncram_component|altsyncram_64s1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a0.CLK1
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a1.CLK1
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a2.CLK1
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a3.CLK1
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a4.CLK1
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a5.CLK1
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a6.CLK1
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a7.CLK1
clock0 => rden_b_store.CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
q_b[4] <= ram_block1a4.PORTBDATAOUT
q_b[5] <= ram_block1a5.PORTBDATAOUT
q_b[6] <= ram_block1a6.PORTBDATAOUT
q_b[7] <= ram_block1a7.PORTBDATAOUT
rden_b => ram_block1a0.IN1
rden_b => ram_block1a0.PORTBRE
rden_b => ram_block1a1.PORTBRE
rden_b => ram_block1a2.PORTBRE
rden_b => ram_block1a3.PORTBRE
rden_b => ram_block1a4.PORTBRE
rden_b => ram_block1a5.PORTBRE
rden_b => ram_block1a6.PORTBRE
rden_b => ram_block1a7.PORTBRE
rden_b => rden_b_store.DATAIN
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a1.ENA0
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a2.ENA0
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a3.ENA0
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a4.ENA0
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a5.ENA0
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a6.ENA0
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a7.ENA0


